/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  ClusterFilter,
  Context,
  Program,
  PublicKey,
} from '@metaplex-foundation/umi';
import { getVaultErrorFromCode, getVaultErrorFromName } from '../errors';

export const VAULT_PROGRAM_ID =
  'Ds1WLBK4R44S3bk1DeDiUrwxQ9ydrdjn7hkrY61EDVXF' as PublicKey<'Ds1WLBK4R44S3bk1DeDiUrwxQ9ydrdjn7hkrY61EDVXF'>;

export function createVaultProgram(): Program {
  return {
    name: 'vault',
    publicKey: VAULT_PROGRAM_ID,
    getErrorFromCode(code: number, cause?: Error) {
      return getVaultErrorFromCode(code, this, cause);
    },
    getErrorFromName(name: string, cause?: Error) {
      return getVaultErrorFromName(name, this, cause);
    },
    isOnCluster() {
      return true;
    },
  };
}

export function getVaultProgram<T extends Program = Program>(
  context: Pick<Context, 'programs'>,
  clusterFilter?: ClusterFilter
): T {
  return context.programs.get<T>('vault', clusterFilter);
}

export function getVaultProgramId(
  context: Pick<Context, 'programs'>,
  clusterFilter?: ClusterFilter
): PublicKey {
  return context.programs.getPublicKey(
    'vault',
    VAULT_PROGRAM_ID,
    clusterFilter
  );
}
